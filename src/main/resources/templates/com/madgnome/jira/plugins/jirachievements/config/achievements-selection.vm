#* @vtlvariable name="action" type="com.madgnome.jira.plugins.jirachievements.ui.action.admin.ViewGlobalConfiguration" *#
#macro (categoryAchievements $categoryName)
  <div class="achievements-list">
    #foreach ($achievement in $achievements.get($categoryName))
      #parse ('/templates/com/madgnome/jira/plugins/jirachievements/config/achievement-admin-detail.vm')
    #end
  </div>
#end

<div id="achievements-config">

  <div id="tabs">
    <ul>
      <li><a href="#horizontal-first">User</a></li>
      <li><a href="#horizontal-second">Developer</a></li>
      <li><a href="#horizontal-third">Tester</a></li>
    </ul>
    <div id="horizontal-first">
      #categoryAchievements("user")
    </div>
    <div id="horizontal-second">
      #categoryAchievements("developer")
    </div>
    <div id="horizontal-third">
      #categoryAchievements("tester")
    </div>
  </div>
</div>

<script type="text/javascript">
  jQuery(document).ready(function() {

    jQuery( "#tabs" ).tabs({
      show: function(event, ui) {
        jQuery('.achievements-list').masonry({
          singleMode: true,
          itemSelector : '.achievement-config'
        });
      }
    });

    jQuery('#achievements-config').bind('tabSelect', function() {
      jQuery('.active-pane > .achievements-list').masonry({
        singleMode: true,
        itemSelector : '.achievement-config'
      });
    });

    jQuery('.achievements-list').masonry({
      singleMode: true,
      itemSelector : '.achievement-config'
    });

    jQuery('.achievement-config').click(function(event) {
      var achievement = jQuery(event.currentTarget);
      achievement.children('.mask').toggleClass('active');
      jQuery.ajax({
        url: AJS.params.baseURL + '/rest/jirachievement/1.0/achievements/' + achievement.data('id') + '/config',
        type: 'PUT',
        data: {
          active: achievement.children('.mask').hasClass('active')
        }
      });
    });
  });

  jira.app.findVersionSelectAndConvertToPicker = function ()
  {
    function createPicker(selectField)
    {
      new AJS.MultiSelect({
                             element: selectField,
                             itemAttrDisplayed: "label"
                           });
    }

    function locateSelect(parent)
    {

      var _parent = AJS.$(parent),
        selectField;

      if (_parent.is("select"))
      {
        selectField = _parent;
      }
      else
      {
        selectField = _parent.find("select");
      }

      return selectField;
    }

    var DEFAULT_SELECTORS = [
      "div.aui-field-versionspicker.frother-control-renderer", // aui forms
      "td.aui-field-versionspicker.frother-control-renderer", // convert to subtask and move
      "tr.aui-field-versionspicker.frother-control-renderer" // bulk edit
    ];

    return function (context, selector)
    {

      selector = selector || DEFAULT_SELECTORS.join(", ");

      AJS.$(selector, context).each(function ()
                                    {

                                      var selectField = locateSelect(this);

                                      if (selectField.length)
                                      {
                                        createPicker(selectField);
                                      }
                                      else
                                      {
                                        /* [logging] */
                                        AJS.log("jira.app.convertToVersionPicker: Tried to create version picker using [" + selector + "] "
                                                  + "however selector does not match or could not find <select>");
                                        /* [logging] end */
                                      }

                                    });

    };
  }();

  // Have to reintroduce this label for use by lozenge.js
  // (Usually stored in hidden input (includes\decorators\global-translations.jsp)
  AJS.params.removeItem = '$i18n.getText("admin.common.words.remove")';
  jira.app.findVersionSelectAndConvertToPicker(document.body, ".frother-control-renderer");
</script>